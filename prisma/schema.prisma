generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                    String         @id @default(uuid())
  email                 String         @unique
  password              String?
  name                  String?
  image                 String?
  boards                BoardUser[]
  createdAt             DateTime       @default(now())
  updatedAt             DateTime       @updatedAt
  Notification          Notification[]
  notificationsFromUser Notification[] @relation("NotificationFromUser")
}

model Board {
  id             Int         @id @default(autoincrement())
  title          String
  description    String?
  cardColorTheme String
  imageUrl       String?
  notes          Note[]
  users          BoardUser[]
  createdAt      DateTime    @default(now())
  updatedAt      DateTime    @updatedAt
  Drawing        Drawing[]
  Gif            Gif[]
}

model BoardUser {
  userId  String
  boardId Int
  role    String
  user    User   @relation(fields: [userId], references: [id])
  board   Board  @relation(fields: [boardId], references: [id])

  @@id([userId, boardId])
}

model Note {
  id        String   @id
  content   String
  x         String
  y         String
  width     Int
  height    Int
  boardId   Int
  zIndex    Int
  board     Board    @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Drawing {
  id        String   @id
  title     String?
  strokes   Json
  version   Int      @default(1)
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Gif {
  id        String   @id
  url       String
  alt       String
  x         Int
  y         Int
  width     Int
  height    Int
  boardId   Int
  board     Board    @relation(fields: [boardId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Notification {
  id         Int      @id @default(autoincrement())
  type       String
  userId     String
  message    String
  url        String
  fromUserId String?
  boardId    Int?
  boardTitle String?
  read       Boolean  @default(false)
  createdAt  DateTime @default(now())

  user     User  @relation(fields: [userId], references: [id])
  fromUser User? @relation("NotificationFromUser", fields: [fromUserId], references: [id])
}
